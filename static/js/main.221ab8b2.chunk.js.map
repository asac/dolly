{"version":3,"sources":["store/auth/types.js","lib/redux.helper.js","lib/api.helper.js","store/general-errors/types.js","store/general-errors/actions.js","services/auth.service.js","store/auth/actions.js","components/molecules/LogoutButton/LogoutButton.jsx","components/layouts/Main.jsx","store/auth/reducer.js","store/devices/types.js","store/devices/reducer.js","components/molecules/DevicesAutoComplete/DevicesAutoComplete.jsx","components/atoms/ConfirmButton/ConfirmButton.jsx","services/devices.service.js","store/devices/actions.js","components/molecules/DeviceRevisionSelect/DeviceRevisionSelect.jsx","components/organisms/Clone/Clone.jsx","store/general-errors/reducer.js","store/reducer.js","store/index.js","components/organisms/IsAuthenticated/IsAuthenticated.jsx","App.jsx","serviceWorker.js","index.js"],"names":["AUTH_USER_GET","AUTH_USER_GET_INPROGRESS","AUTH_USER_GET_SUCCESS","AUTH_USER_GET_FAILURE","AUTH_CLEAR_TOKEN","AUTH_SAVE_TOKEN","defualtSuccessCb","state","action","successPrefix","payload","buildBasicActions","types","actionPrefix","success","type","failure","error","inProgress","buildBasicReducers","STATES","typePrefix","failurePrefix","successCb","INPROGRESS","FAILURE","SUCCESS","status","IN_PROGRESS","API_URL","process","_requestContentType","url","a","token","contentType","method","body","headers","options","JSON","stringify","fetch","_requestJSON","response","json","ok","redirected","_getJSON","_postJSON","processService","service","resp","Error","code","message","catchError","apiError","cb","dispatch","Login","setError","messsage","AUTH_STATUS","OAUTH_AUTH_URL","redirectToDefault","location","href","goToAuthorization","localStorage","removeItem","scope","redirectTo","responseType","clientId","encodeURI","OAuthUrl","getUserData","getUserActions","Types","SaveToken","hash","match","reduce","acc","val","split","key","value","getTokenFromImplicit","setItem","setToken","access_token","useStyles","makeStyles","theme","fab","position","top","spacing","right","connect","auth","Logout","classes","Fab","className","variant","onClick","icon","marginRight","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","linearProgress","width","flex","justifyContent","alignItems","margin","vertialSpace","marginBottom","footer","Copyright","Typography","color","align","Link","Date","getFullYear","MainLayout","children","Fragment","CssBaseline","Container","maxWidth","src","alt","component","getItem","username","decodeJwt","jwt","jwtDecode","e","STATUS","initialState","exp","id","nick","orig_iat","prn","roles","gettingToken","getTokenError","ActionMapper","undefined","authReducer","DEVICES_GET_ALL","DEVICES_GET_ALL_INPROGRESS","DEVICES_GET_ALL_SUCCESS","DEVICES_GET_ALL_FAILURE","DEVICES_GET","DEVICES_GET_INPROGRESS","DEVICES_GET_SUCCESS","DEVICES_GET_FAILURE","DEVICES_CLONE","DEVICES_CLONE_INPROGRESS","DEVICES_CLONE_SUCCESS","DEVICES_CLONE_FAILURE","DEVICES_SET_SOURCE","DEVICES_SET_REVISION","DEVICES_SET_CLONE_USER_META","DEVICES_SET_DESTINATION","DEVICES_CLEAN_FORM","DEVICE_SET_FORM_ERRORS","CLONING","WAITING_DEPLOY","list","clone","source","destination","selectedRevision","cloneUserMeta","formErrors","mergeState","s","revisions","find","r","rev","revision","reducer","option","fontSize","DevicesAutoComplete","defaultClasses","devices","label","onChange","Autocomplete","clearOnEscape","style","autoHighlight","getOptionLabel","_","newValue","renderOption","renderInput","params","TextField","fullWidth","inputProps","autoComplete","ConfirmButton","buttonTxt","dialogText","dialogBody","cancelTxt","confirmTxt","onConfirm","disabled","React","useState","open","setOpen","handleClose","Button","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","SUMMARY_URL","trailsUrl","deviceId","getDevices","postTrails","getDeviceTrails","getDevicesActions","cloneDeviceActions","validateForm","errors","valid","Object","values","some","d","deviceid","destionation","keys","length","DeviceRevisionSelect","device","user","getState","Service","devicesResponse","Promise","all","map","trails","sort","b","console","debug","setSource","setDestination","setCloneUserMeta","cleanForm","setSelectedRevision","cloneDevice","validation","bind","newTrail","info","loading","setLoading","useEffect","UserStatus","DevicesStatus","gutterBottom","paragraph","Grid","container","justify","item","md","xs","FormGroup","FormControlLabel","control","Checkbox","checked","target","LinearProgress","Alert","severity","initialErrors","rootReducer","combineReducers","composeEnhancers","compose","GetUser","SaveTokenAndRedirect","CircularProgress","store","createStore","createRootReducer","applyMiddleware","ReduxThunk","filter","m","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.221ab8b2.chunk.js","sourcesContent":["export const AUTH_USER_GET = 'AUTH_USER_GET'\nexport const AUTH_USER_GET_INPROGRESS = 'auth/user/get/inprogress'\nexport const AUTH_USER_GET_SUCCESS = 'auth/user/get/success'\nexport const AUTH_USER_GET_FAILURE = 'auth/user/get/failure'\n\nexport const AUTH_CLEAR_TOKEN = 'auth/token/clear'\nexport const AUTH_SAVE_TOKEN = 'auth/token/save'","const defualtSuccessCb = (state, action, successPrefix) => {\n  return action.payload\n}\n\nexport function buildBasicActions (types = {}, actionPrefix = '') {\n  return {\n    success: (payload) => ({\n      type: types[`${actionPrefix}_SUCCESS`],\n      payload\n    }),\n    failure: (error) => ({\n      type: types[`${actionPrefix}_FAILURE`],\n      error\n    }),\n    inProgress: () => ({\n      type: types[`${actionPrefix}_INPROGRESS`]\n    })\n  }\n}\n\nexport function buildBasicReducers (STATES, types, typePrefix, successPrefix, failurePrefix = 'error', successCb = defualtSuccessCb) {\n  const INPROGRESS = types[`${typePrefix}_INPROGRESS`]\n  const FAILURE = types[`${typePrefix}_FAILURE`]\n  const SUCCESS = types[`${typePrefix}_SUCCESS`]\n  return {\n    [INPROGRESS]: (state, action) => ({\n      ...state,\n      status: STATES.IN_PROGRESS\n    }),\n    [FAILURE]: (state, action) => ({\n      ...state,\n      [`${failurePrefix}`]: action.error,\n      status: STATES.FAILURE,\n    }),\n    [SUCCESS]: (state, action) => {\n      return !successPrefix\n        ? {\n          ...state,\n          ...successCb(state, action, successPrefix),\n          status: STATES.SUCCESS,\n        } : {\n          ...state,\n          [successPrefix]: successCb(state, action, successPrefix),\n          status: STATES.SUCCESS,\n        }\n    }\n  }\n}\n","import fetch from 'isomorphic-fetch'\n\nexport const API_URL = process.env.REACT_APP_PH_API_URL || 'https://api.pantahub.com'\n\nexport const _requestContentType = async (\n  url,\n  token = '',\n  contentType = 'application/json',\n  method = 'GET',\n  body = {}\n) => {\n  let headers = {\n    'Content-Type': contentType\n  }\n\n  if (token) headers['Authorization'] = `Bearer ${token}`\n\n  let options = {\n    method,\n    headers: headers\n  }\n\n  if (method !== 'GET' && method !== 'HEAD') {\n    options['body'] = JSON.stringify(body)\n  }\n\n  return fetch(url, options)\n}\n\nconst _requestJSON = async (url, method = 'GET', token = '', body = {}) => {\n  const response = await _requestContentType(\n    url,\n    token,\n    'application/json',\n    method,\n    body\n  )\n\n  const json = await response.json()\n\n  return {\n    ok: response.ok,\n    redirected: response.redirected,\n    headers: response.headers,\n    status: response.status,\n    json\n  }\n}\n\nexport const _getJSON = async (url, token) =>\n  _requestJSON(url, 'GET', token)\n\nexport const _postJSON = async (url, token, body) =>\n  _requestJSON(url, 'POST', token, body)\n\nexport const _putJSON = async (url, token, body) =>\n  _requestJSON(url, 'PUT', token, body)\n\nexport const _patchJSON = async (url, token, body) =>\n  _requestJSON(url, 'PATCH', token, body)\n\nexport const _delete = async (url, token) =>\n  _requestJSON(url, 'DELETE', token)\n\nexport async function processService (service, success, failure) {\n  let resp\n  try {\n    resp = await service()\n    if (!resp.ok) {\n      failure(typeof resp.json.Error === 'string' ? { code: resp.status, message: resp.json.Error } : resp.json)\n    } else {\n      success(resp.json)\n    }\n  } catch (err) {\n    resp = {\n      ok: false,\n      json: {\n        code: 0,\n        message: err\n      }\n    }\n    failure(resp.json)\n  }\n  return resp\n}\n","/*\n * Copyright (c) 2019 Pantacor Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nexport const GENERAL_ERROR_SET = 'error/set'\nexport const GENERAL_ERROR_CLEAN = 'error/clean'\n","import * as Types from './types'\nimport { Login } from '../auth/actions'\n\nexport const catchError = (apiError, cb) => (dispatch) => {\n  dispatch(setError(apiError.code, apiError.messsage))\n  dispatch(cb(apiError))\n}\n\nexport function setError (type, error) {\n  if ( type === 401) {\n    return Login()\n  }\n  return {\n    type: Types.GENERAL_ERROR_SET,\n    payload: {\n      type,\n      error\n    }\n  }\n}\n\nexport function clearError () {\n  return {\n    type: Types.GENERAL_ERROR_CLEAN\n  }\n}\n","/* eslint-disable no-restricted-globals */\nimport {\n  _getJSON,\n  API_URL\n} from '../lib/api.helper'\n\nconst AUTH_STATUS = `${API_URL}/auth/auth_status`\nconst OAUTH_AUTH_URL = `${process.env.REACT_APP_PH_URL}/oauth2/authorize`\nconst OAUTH_CLIENT_ID = process.env.REACT_APP_OAUTH_CLIENT_ID\nconst OAUTH_DEFAULT_SCOPE = process.env.REACT_APP_OAUTH_DEFAULT_SCOPE\nconst redirectToDefault = () => `${location.href}`\n\nexport const JWT_NAME = '_ph_token'\n\nexport function getTokenFromImplicit (hash) {\n  return (hash.match(/([^#=&]+)(=([^&]*))?/g) || []).reduce((acc, val) => {\n    const [key, value] = val.split(\"=\")\n    acc[key] = value\n    return acc\n  }, {})\n}\n\nexport const OAuthUrl = (\n  scope = OAUTH_DEFAULT_SCOPE,\n  redirectTo,\n  responseType = \"token\",\n  clientId = OAUTH_CLIENT_ID,\n) => {\n  redirectTo = !redirectTo ? redirectToDefault() : redirectTo\n  return encodeURI(`${OAUTH_AUTH_URL}?client_id=${clientId}&scope=${scope}&redirect_uri=${redirectTo}&response_type=${responseType}`)\n}\n\nexport const goToAuthorization = () => {\n  localStorage.removeItem(JWT_NAME)\n  location.href = OAuthUrl()\n}\n\nexport const removeToken = () => \n  localStorage.removeItem(JWT_NAME)\n\nexport const setToken = (token) =>\n  localStorage.setItem(JWT_NAME, token)\n\nexport async function getUserData (token) {\n  return _getJSON(AUTH_STATUS, token)\n}","/* eslint-disable no-restricted-globals */\n\nimport * as Types from './types'\nimport { buildBasicActions } from \"../../lib/redux.helper\"\nimport { processService } from \"../../lib/api.helper\"\nimport { catchError } from \"../general-errors/actions\"\nimport { goToAuthorization, removeToken, getTokenFromImplicit, getUserData, setToken } from \"../../services/auth.service\"\n\nconst getUserActions = buildBasicActions(Types, Types.AUTH_USER_GET)\n\nexport const Login = () => {\n  goToAuthorization()\n  return {\n    type: Types.AUTH_CLEAR_TOKEN,\n  }\n}\n\nexport const Logout = () => {\n  removeToken()\n  return {\n    type: Types.AUTH_CLEAR_TOKEN,\n  }\n}\n\nexport const SaveToken = (hash) => {\n  const token = getTokenFromImplicit(hash)\n  setToken(token.access_token)\n  return {\n    type: Types.AUTH_SAVE_TOKEN,\n    payload: token.access_token\n  }\n}\n\nexport const SaveTokenAndRedirect = (hash) => (dispatch) => {\n  dispatch(SaveToken(hash))\n  location.hash = ''\n}\n\nexport const GetUser = () => async (dispatch, getState) => {\n  dispatch(getUserActions.inProgress())\n  const state = getState()\n\n  if (!state.auth.token) {\n    return null\n  }\n\n  return processService(\n    getUserData.bind(null, state.auth.token),\n    (resp) => dispatch(getUserActions.success(resp)),\n    (error) => dispatch(catchError(error, getUserActions.failure))\n  )\n}","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Logout } from \"../../../store/auth/actions\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles(theme => ({\n  fab: {\n    position: 'absolute',\n    top: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}))\n\nexport function LogoutButton({ token, Logout }) {\n  const classes = useStyles();\n\n  if (token === null) {\n    return null\n  }\n\n  return (\n    <Fab\n      className={classes.fab}\n      variant=\"extended\"\n      onClick={Logout}\n    >\n      Log out\n    </Fab>\n  )\n} \n\nexport default connect(state => ({\n  token: state.auth.token,\n}), {\n  Logout,\n})(LogoutButton)","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Link from '@material-ui/core/Link';\nimport Container from '@material-ui/core/Container';\nimport LogoutButton from '../molecules/LogoutButton/LogoutButton';\n\nexport const useStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(8),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  linearProgress: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n  flex: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  vertialSpace: {\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://www.github.com/highercomve/dolly\">\n        Sergio Marin\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nexport default function MainLayout ({ children }) {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <LogoutButton />\n      <header>\n        <Container maxWidth=\"md\">\n          <img src={process.env.PUBLIC_URL + '/logo.png'} alt=\"Dolly\" height=\"100px\" />\n          {/* <Typography variant=\"h3\" color=\"inherit\" noWrap>\n            Dolly\n          </Typography> */}\n        </Container>\n      </header>\n      <main>\n        {children}\n      </main>\n      <footer className={classes.footer}>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          Pantahub cloner is a thirdpary opensource project\n        </Typography>\n        <Copyright />\n      </footer>\n    </React.Fragment>\n  )\n}","/* global localStorage */\nimport * as Types from './types'\nimport jwtDecode from 'jwt-decode'\nimport { JWT_NAME } from '../../services/auth.service'\nimport { buildBasicReducers } from '../../lib/redux.helper'\n\nconst authInfo = localStorage.getItem(JWT_NAME)\nconst [token, username] = (authInfo || '').split('|')\nconst decodeJwt = (jwt = '') => {\n  try {\n    return jwtDecode(jwt)\n  } catch (e) {\n    return {}\n  }\n}\n\nexport const STATUS = {\n  IN_PROGRESS: 'INPROGRESS',\n  SUCCESS: 'SUCCESS',\n  FAILURE: 'FAILURE'\n}\n\nconst initialState = {\n  username: username || '',\n  token: token || null,\n  exp: null,\n  id: '',\n  nick: '',\n  orig_iat: null,\n  prn: '',\n  roles: '',\n  type: '',\n  gettingToken: false,\n  getTokenError: null,\n  status: null,\n  ...decodeJwt(token)\n}\n\nconst mergeState = (state, action, successPrefix) => ({\n  ...state,\n  ...action.payload\n})\n\nconst ActionMapper = {\n  ...buildBasicReducers(STATUS, Types, Types.AUTH_USER_GET, undefined, undefined, mergeState),\n  [Types.AUTH_SAVE_TOKEN]: (state, action) => ({\n    ...state,\n    ...decodeJwt(action.payload),\n    token: action.payload,\n  }),\n  [Types.AUTH_CLEAR_TOKEN]: (state, action) => ({ ...initialState, token: null })\n}\n\nexport default function authReducer (state = initialState, action) {\n  return ActionMapper[action.type] ? ActionMapper[action.type](state, action) : state\n}\n","\nexport const DEVICES_GET_ALL = 'DEVICES_GET_ALL'\nexport const DEVICES_GET_ALL_INPROGRESS = 'devices/get/all/inprogress'\nexport const DEVICES_GET_ALL_SUCCESS = 'devices/get/all/success'\nexport const DEVICES_GET_ALL_FAILURE = 'devices/get/all/failure'\n\nexport const DEVICES_GET = 'DEVICES_GET'\nexport const DEVICES_GET_INPROGRESS = 'devices/get/inprogress'\nexport const DEVICES_GET_SUCCESS = 'devices/get/success'\nexport const DEVICES_GET_FAILURE = 'devices/get/failure'\n\nexport const DEVICES_CLONE = 'DEVICES_CLONE'\nexport const DEVICES_CLONE_INPROGRESS = 'devices/clone/inprogress'\nexport const DEVICES_CLONE_SUCCESS = 'devices/clone/success'\nexport const DEVICES_CLONE_FAILURE = 'devices/clone/failure'\n\nexport const DEVICES_SET_SOURCE = 'devices/set/source'\nexport const DEVICES_SET_REVISION = 'devices/set/selected-revision'\nexport const DEVICES_SET_CLONE_USER_META = 'devices/set/clone-user-meta'\nexport const DEVICES_SET_DESTINATION = 'devices/set/destination'\nexport const DEVICES_CLEAN_FORM = 'devices/clear/form'\nexport const DEVICE_SET_FORM_ERRORS = 'devices/set/form-errors'","import * as Types from './types'\nimport { buildBasicReducers } from '../../lib/redux.helper'\n\nexport const STATUS = {\n  IN_PROGRESS: 'inprogr',\n  FAILURE: 'failure',\n  SUCCESS: 'success',\n  CLONING: {\n    IN_PROGRESS: 'IN_PROGRESS',\n    FAILURE: 'FAILURE',\n    SUCCESS: 'SUCCESS',\n  },\n  WAITING_DEPLOY: 'WAITING_DEPLOY' \n}\n\nexport const initialState = {\n  list: [],\n  status: null,\n  clone: null,\n  source: null,\n  destination: null,\n  selectedRevision: null,\n  cloneUserMeta: false,\n  formErrors: {},\n}\n\nconst mergeState = (state, action, successPrefix) => ({\n  ...state[successPrefix],\n  ...action.payload\n})\n\nconst ActionMapper = {\n  ...buildBasicReducers(STATUS, Types, Types.DEVICES_GET_ALL, 'list', undefined, mergeState),\n  ...buildBasicReducers(STATUS.CLONING, Types, Types.DEVICES_CLONE, 'clone', undefined, mergeState),\n  [Types.DEVICES_SET_DESTINATION]: (s, a) => ({ ...s, destination: a.payload }),\n  [Types.DEVICES_SET_CLONE_USER_META]: (s, a) => ({ ...s, cloneUserMeta: a.payload }),\n  [Types.DEVICE_SET_FORM_ERRORS]: (s, a) => ({ ...s, formErrors: a.payload }),\n  [Types.DEVICES_SET_REVISION]: (s, a) => ({ ...s, selectedRevision: a.payload }),\n  [Types.DEVICES_SET_SOURCE]: (s, a) => ({\n    ...s,\n    source: a.payload,\n    selectedRevision: a.payload.revisions.find(r => r.rev === a.payload.revision)\n  }),\n  [Types.DEVICES_CLEAN_FORM]: (state) => ({\n    ...state,\n    source: null,\n    destination: null,\n    selectedRevision: null,\n    cloneUserMeta: false\n  }),\n}\n\nexport default function reducer (state = initialState, action) {\n  return ActionMapper[action.type] ? ActionMapper[action.type](state, action) : state\n}\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  option: {\n    fontSize: 15,\n    '& > span': {\n      marginRight: 10,\n      fontSize: 18,\n    },\n  },\n});\n\nexport default function DevicesAutoComplete({ value, defaultClasses = {}, devices, label, onChange = () => null }) {\n  const classes = useStyles();\n\n  return (\n    <Autocomplete\n      clearOnEscape\n      id=\"devices-select\"\n      style={{ width: '100%' }}\n      options={devices}\n      value={value}\n      classes={{\n        ...defaultClasses,\n        option: classes.option,\n      }}\n      autoHighlight\n      getOptionLabel={option => option['device-nick']}\n      onChange={(_, newValue) => {\n        onChange(newValue);\n      }}\n      renderOption={option => (\n        <React.Fragment>\n          {option['device-nick']}\n        </React.Fragment>\n      )}\n      renderInput={params => (\n        <TextField\n          {...params}\n          label={label}\n          variant=\"outlined\"\n          fullWidth\n          inputProps={{\n            ...params.inputProps,\n            autoComplete: 'Device nick', // disable autocomplete and autofill\n          }}\n        />\n      )}\n    />\n  );\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function ConfirmButton({\n  buttonTxt = '',\n  variant = 'outlined',\n  color = 'primary',\n  dialogText = '',\n  dialogBody = null,\n  cancelTxt = 'Cancel',\n  confirmTxt = 'Confirm',\n  onConfirm = () => null,\n  disabled\n}) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleConfirm = () => {\n    setOpen(false);\n    onConfirm()\n  }\n\n  return (\n    <div>\n      <Button variant={variant} color={color} onClick={handleClickOpen} disabled={disabled}>\n        {buttonTxt}\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{dialogText}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {dialogBody}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            {cancelTxt}\n          </Button>\n          <Button onClick={handleConfirm} color=\"primary\" autoFocus>\n            {confirmTxt}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import {\n  _getJSON,\n  _postJSON,\n  _putJSON,\n  API_URL\n} from '../lib/api.helper'\n\nconst DEVS_URL = `${API_URL}/devices`\nconst SUMMARY_URL = `${API_URL}/trails/summary`\n\nconst trailsUrl = (deviceId) =>\n  `${API_URL}/trails/${deviceId}/steps`\n\nconst tailsDeviceSummaryUrl = (id) =>\n  `${API_URL}/trails/${id}/summary`\n\nexport const getDeviceSummary = async (token, id) =>\n  _getJSON(tailsDeviceSummaryUrl(id), token)\n\nexport const getDevices = async (token) =>\n  _getJSON(SUMMARY_URL, token)\n\nexport const postTrails = async (token, id, payload) =>\n  _postJSON(trailsUrl(id), token, payload)\n\nexport const setDeviceMetadata = async (token, id, meta, type = 'user-meta') =>\n  _putJSON(`${DEVS_URL}/${id}/${type}`, token, meta)\n\nexport const getDeviceTrails = async (token, id) =>\n  _getJSON(trailsUrl(id)+'?progress.status={%22$ne%22:%22%22}', token)\n","import * as Types from './types'\nimport * as Service from '../../services/devices.service'\nimport { buildBasicActions } from \"../../lib/redux.helper\"\nimport { processService } from \"../../lib/api.helper\"\nimport { catchError } from '../general-errors/actions'\n\nconst getDevicesActions = buildBasicActions(Types, Types.DEVICES_GET_ALL)\nconst getDeviceActions = buildBasicActions(Types, Types.DEVICES_GET)\nconst cloneDeviceActions = buildBasicActions(Types, Types.DEVICES_CLONE)\n\nconst validateForm = (state) => {\n  const errors = {\n    valid: true\n  }\n\n  const devices = Object.values(state.list)\n\n  if (state.source === null) {\n    errors.source = 'Please select a source device'\n  }\n  if (state.destination === null) {\n    errors.destination = 'Please select a destination device'\n  }\n\n  if (state.destination !== null && !devices.some((d) => d.deviceid === state.destination.deviceid)) {\n    errors.destination = 'You need to be owner of the destination device'\n  }\n\n  if (state.source !== null && state.destination !== null && state.source.deviceid === state.destination.deviceid) {\n    errors.destionation = `Please select another destination device, the destination can't be the same as source`\n  }\n  \n  if (Object.keys(errors).length > 1) {\n    errors.valid = false\n  }\n\n  return errors\n}\n\nexport const setDestination = (payload) => ({\n  type: Types.DEVICES_SET_DESTINATION,\n  payload: payload,\n})\n\nexport const setSource = (payload) => ({\n  type: Types.DEVICES_SET_SOURCE,\n  payload: payload,\n})\n\nexport const setCloneUserMeta = (payload) => ({\n  type: Types.DEVICES_SET_CLONE_USER_META,\n  payload: payload,\n})\n\nexport const setSelectedRevision = (payload) => ({\n  type: Types.DEVICES_SET_REVISION,\n  payload: payload,\n})\n\nexport const cleanForm = () => ({\n  type: Types.DEVICES_CLEAN_FORM,\n})\n\nexport const getDevices = () => async (dispatch, getState) => {\n  dispatch(getDevicesActions.inProgress())\n  const state = getState()\n\n  return processService(\n    async () => {\n      const devicesResponse = await Service.getDevices(state.auth.token)\n      const devices = await Promise.all(\n        devicesResponse.json.map(async (d) => {\n          try {\n            const trails = await Service.getDeviceTrails(state.auth.token, d.deviceid)\n            d.revisions = trails.json.sort((a, b) => a.rev < b.rev)\n            return d\n          } catch (e) {\n            console.debug(e)\n            return d\n          }\n        })\n      )\n      return {\n        ...devicesResponse,\n        json: devices\n      }\n    },\n    (resp) => dispatch(getDevicesActions.success(resp)),\n    (error) => dispatch(catchError(error, getDevicesActions.failure))\n  )\n}\n\nexport const getDevice = (id) => async (dispatch, getState) => {\n  dispatch(getDeviceActions.inProgress())\n  const state = getState()\n\n  return processService(\n    async () => {\n      const devicesResponse = await Service.getDeviceSummary(state.auth.token, id)\n      const trails = await Service.getDeviceTrails(state.auth.token, id)\n      devicesResponse.json.trails = trails.json\n      return devicesResponse\n    },\n    (resp) => dispatch(getDeviceActions.success(resp)),\n    (error) => dispatch(catchError(error, getDeviceActions.failure))\n  )\n}\n\nexport const cloneDevice = () => async (dispatch, getState) => {\n  dispatch(cloneDeviceActions.inProgress())\n  const state = getState()\n\n  const validation = validateForm(state.devices)\n\n  if (!validation.valid) {\n    dispatch(cloneDeviceActions.failure({ type: 'invalid', error: 'invalid form' }))\n    dispatch({\n      type: Types.DEVICE_SET_FORM_ERRORS,\n      payload: validation\n    })\n    return\n  }\n\n  const payload = {\n    state: state.devices.selectedRevision.state,\n    rev: -1,\n    'commit-msg': `Cloned from device ${state.devices.source['device-nick']} rev (${state.devices.selectedRevision.rev})`\n  }\n  const newTrail = await processService(\n    Service.postTrails.bind(null, state.auth.token, state.devices.destination.deviceid, payload),\n    (resp) => dispatch(cloneDeviceActions.success(resp)),\n    (error) => dispatch(catchError(error, cloneDeviceActions.failure))\n  )\n\n  if (state.devices.cloneUserMeta) {\n    console.info(\"TODO: Clone user-meta is not implemented yet\")\n  }\n\n  return newTrail\n}\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  option: {\n    fontSize: 15,\n    '& > span': {\n      marginRight: 10,\n      fontSize: 18,\n    },\n  },\n});\n\nexport default function DeviceRevisionSelect({ device, revision, label, onChange = () => null }) {\n  const classes = useStyles();\n\n  if (!device) {\n    return null\n  }\n\n  return (\n    <Autocomplete\n      clearOnEscape\n      autoHighlight\n      id=\"devices-revision-select\"\n      style={{ width: '100%' }}\n      options={device.revisions}\n      classes={{\n        option: classes.option,\n      }}\n      onChange={(_, newValue) => {\n        onChange(newValue);\n      }}\n      value={revision}\n      getOptionLabel={option => `${option.rev} (${option['state-sha']})`}\n      renderOption={option => (\n        <React.Fragment>\n          <span>{option.rev}</span>\n          {option['commit-msg']}\n        </React.Fragment>\n      )}\n      renderInput={params => (\n        <TextField\n          {...params}\n          label={label}\n          variant=\"outlined\"\n          fullWidth\n          inputProps={{\n            ...params.inputProps,\n            autoComplete: 'Device nick', // disable autocomplete and autofill\n          }}\n        />\n      )}\n    />\n  );\n}","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport Button from '@material-ui/core/Button'\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow'\nimport Alert from '@material-ui/lab/Alert'\n\nimport { useStyles } from \"../../layouts/Main\"\nimport { STATUS as UserStatus } from '../../../store/auth/reducer'\nimport { STATUS as DevicesStatus } from '../../../store/devices/reducer'\nimport DevicesAutoComplete from '../../molecules/DevicesAutoComplete/DevicesAutoComplete'\nimport ConfirmButton from '../../atoms/ConfirmButton/ConfirmButton'\nimport {\n  getDevices,\n  setSource,\n  setDestination,\n  setCloneUserMeta,\n  cleanForm,\n  setSelectedRevision,\n  cloneDevice\n} from '../../../store/devices/actions'\nimport DeviceRevisionSelect from '../../molecules/DeviceRevisionSelect/DeviceRevisionSelect'\n\nfunction Clone ({\n  user,\n  devices,\n  getDevices,\n  setSource,\n  setDestination,\n  setCloneUserMeta,\n  cleanForm,\n  setSelectedRevision,\n  cloneDevice\n}) {\n  const classes = useStyles()\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    if (user.status === UserStatus.SUCCESS && devices.status === null) {\n      getDevices()\n    }\n  }, [devices, devices.status, getDevices, user, user.status])\n\n  useEffect(() => {\n    if (devices.status === DevicesStatus.IN_PROGRESS || devices.status === DevicesStatus.CLONING.IN_PROGRESS || devices.status === DevicesStatus.WAITING_DEPLOY) {\n      setLoading(true)\n    } else {\n      setLoading(false)\n    }\n  }, [devices, devices.status])\n\n  if (devices.list.length <= 0) {\n    return null\n  }\n  \n  return (\n    <div className={classes.heroContent}>\n      <Container maxWidth=\"md\">\n        <Typography component=\"h4\" variant=\"h4\" align=\"center\" color=\"textPrimary\" gutterBottom>\n          Welcome, {user.nick}\n        </Typography>\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n          Lets start cloning devices, this feature works with public devices or personal devices.\n        </Typography>\n        <div className={classes.heroButtons}>\n          <Grid container spacing={2} justify=\"center\">\n            <Grid item md={5} xs={12}>\n              <DevicesAutoComplete\n                value={devices.source}\n                devices={Object.values(devices.list)}\n                label=\"Choose a device source\"\n                onChange={setSource}\n              />\n              <br />\n              <DeviceRevisionSelect\n                className={classes.vertialSpace}\n                device={devices.source}\n                revision={devices.selectedRevision}\n                label=\"Choose revision source\"\n                onChange={setSelectedRevision}\n              />\n              <FormGroup justify=\"center\">\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      id=\"user-meta\"\n                      color=\"primary\"\n                      checked={devices.cloneUserMeta}\n                      onChange={(e) => setCloneUserMeta(e.target.checked) }\n                      inputProps={{\n                        'aria-label': 'Clone all user-meta data (only if you are the owner)'\n                      }}\n                    />\n                  }\n                  label=\"Clone all user-meta data (only device owner)\"\n                />\n              </FormGroup>\n            </Grid>\n            <Grid item md={2} xs={12}>\n              <DoubleArrowIcon className=\"clone-icon\" fontSize=\"large\"/>\n            </Grid>\n            <Grid item md={5} xs={12}>\n              <DevicesAutoComplete\n                value={devices.destination}\n                devices={Object.values(devices.list)}\n                label=\"Choose a device destination\"\n                onChange={setDestination}\n              />\n            </Grid>\n            <Grid item md={12}>\n              \n              {devices.status !== DevicesStatus.CLONING.SUCCESS && loading && (\n                <div className={classes.linearProgress} ><LinearProgress /> </div>\n              )}\n              {devices.status !== DevicesStatus.CLONING.SUCCESS && !loading && (\n                <div className={classes.flex}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"default\"\n                    onClick={cleanForm}>\n                    Clear form\n                  </Button>\n                  <ConfirmButton\n                    variant=\"contained\"\n                    color=\"primary\"\n                    buttonTxt=\"Start cloning process\"\n                    disabled={!devices.source || !devices.destination || !devices.selectedRevision}\n                    dialogText={\n                      !!devices.source && !!devices.destination && !!devices.selectedRevision\n                      ? `Are you sure you want to clone ${devices.source['device-nick']} (${devices.selectedRevision.rev}) to ${devices.destination['device-nick']}?`\n                      : ''\n                    }\n                    onConfirm={cloneDevice}\n                  />\n                </div>\n              )}\n              {devices.status === DevicesStatus.CLONING.SUCCESS && (\n                <Alert severity=\"success\">Your device has been cloned!</Alert>\n              )}\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n    </div>\n  )\n}\n\nexport default connect(\n  (state) => ({\n    devices: state.devices,\n    user: state.auth,\n  }),\n  {\n    getDevices,\n    setSource,\n    setDestination,\n    setCloneUserMeta,\n    cleanForm,\n    setSelectedRevision,\n    cloneDevice\n  }\n)(Clone)","/*\n * Copyright (c) 2017 Pantacor Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport * as Types from './types'\n\nconst initialErrors = {\n  type: null,\n  error: null\n}\n\nexport default function reducer (state = initialErrors, action) {\n  switch (action.type) {\n    case Types.GENERAL_ERROR_CLEAN:\n      return initialErrors\n    case Types.GENERAL_ERROR_SET:\n      return {\n        ...state,\n        ...action.payload\n      }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\n\nimport devices from './devices/reducer'\nimport errors from './general-errors/reducer'\nimport auth from './auth/reducer'\n\nconst rootReducer = () => combineReducers({\n  devices,\n  errors,\n  auth\n})\n\nexport default rootReducer\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport ReduxThunk from 'redux-thunk'\n\nimport createRootReducer from './reducer'\n\nconst composeEnhancers = process.env.REACT_APP_REDUX_DEBUG === 'true'\n  ? composeWithDevTools({ trace: true, traceLimit: 25 })\n  : compose\n\nexport default () => {\n  return createStore(\n    createRootReducer(), /* preloadedState, */\n    composeEnhancers(\n      applyMiddleware(\n        ...[\n          ReduxThunk\n        ].filter(m => !!m)\n      )\n    )\n  )\n}","/* eslint-disable no-restricted-globals */\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { Login, GetUser, SaveTokenAndRedirect } from '../../../store/auth/actions'\nimport { STATUS } from '../../../store/auth/reducer'\n\nfunction IsAuthenticated ({ children, status, token, Login, GetUser, SaveTokenAndRedirect }) {\n  useEffect(() => {\n    const hash = location.hash\n\n    if (hash !== '') {\n      SaveTokenAndRedirect(hash)\n      return\n    }\n    \n    if (!hash && !token) {\n      Login()\n      return\n    }\n  }, [token, SaveTokenAndRedirect, Login])\n\n  useEffect(() => {\n    if (status === null) {\n      GetUser()\n    }\n  }, [GetUser, status])\n\n  if (status === STATUS.INPROGRESS) {\n    return (\n      <CircularProgress />\n    )\n  }\n  return (\n    <div className=\"App\">\n      {children}\n    </div>\n  )\n}\n\nexport default connect(\n  (state) => ({ \n    token: state.auth.token,\n    status: state.auth.status,\n  }),\n  {\n    Login,\n    GetUser,\n    SaveTokenAndRedirect\n  }\n)(IsAuthenticated)","import React from 'react';\nimport './App.css';\nimport MainLayout from './components/layouts/Main';\nimport Clone from './components/organisms/Clone/Clone';\nimport { Provider } from 'react-redux';\nimport CreateStore from './store';\nimport IsAuthenticated from './components/organisms/IsAuthenticated/IsAuthenticated';\n\nconst store = CreateStore()\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <IsAuthenticated>\n        <MainLayout>\n          <Clone />\n        </MainLayout>\n      </IsAuthenticated>\n    </Provider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}